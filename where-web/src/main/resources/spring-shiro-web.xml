<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
    xmlns:context="http://www.springframework.org/schema/context"
    xmlns:mvc="http://www.springframework.org/schema/mvc"
    xsi:schemaLocation="http://www.springframework.org/schema/beans    
                        http://www.springframework.org/schema/beans/spring-beans.xsd    
                        http://www.springframework.org/schema/context    
                        http://www.springframework.org/schema/context/spring-context.xsd    
                        http://www.springframework.org/schema/mvc    
                        http://www.springframework.org/schema/mvc/spring-mvc.xsd">

    <!-- 缓存管理器 使用Ehcache实现-->
    <bean id="cacheManager" class="org.apache.shiro.cache.ehcache.EhCacheManager">
        <property name="cacheManagerConfigFile" value="classpath:ehcache.xml" />
    </bean>

    <!-- 凭证匹配器-->
    <bean id="credentialsMatcher" class="com.where.where_web.shiro.credentials.RetryLimitHashedCredentialsMatcher">
        <constructor-arg ref="cacheManager" />
        <property name="hashAlgorithmName" value="md5" />
        <property name="hashIterations" value="2" />
        <property name="storedCredentialsHexEncoded" value="true" />
    </bean> 
      <!-- 凭证匹配器-->
    <!-- <bean id="credentialsMatcher" class="org.apache.shiro.authc.credential.HashedCredentialsMatcher">
        <constructor-arg ref="cacheManager" />
        <property name="hashAlgorithmName" value="md5" />
        <property name="hashIterations" value="2" />
        <property name="storedCredentialsHexEncoded" value="true" />
    </bean>  -->

    <!-- Realm实现 -->
    <bean id="userRealm" class="com.where.where_web.shiro.realm.MyRealm">
        <property name="credentialsMatcher" ref="credentialsMatcher" /> 
    </bean>
	<!-- usersRealm实现 -->
	<bean id="usersRealm" class="com.where.where_web.shiro.realm.UsersRealm">
        <property name="credentialsMatcher" ref="credentialsMatcher" /> 
    </bean>
    <bean id="businessRealm" class="com.where.where_web.shiro.realm.BusinessRealm">
        <property name="credentialsMatcher" ref="credentialsMatcher" /> 
    </bean>
    <bean id="administratorRealm" class="com.where.where_web.shiro.realm.AdministratorRealm">
        <property name="credentialsMatcher" ref="credentialsMatcher" /> 
    </bean>
    
      <!-- 基于Form表单的身份验证过滤器 -->
    <bean id="formAuthenticationFilter" class="org.apache.shiro.web.filter.authc.FormAuthenticationFilter">
        <property name="usernameParam" value="username"/>
        <property name="passwordParam" value="password"/>
         <property name="rememberMeParam" value="rememberMe"/>  
      
    </bean>
    <!-- 会话id生成器 -->
    <bean id="sessionIdGenerator" class="org.apache.shiro.session.mgt.eis.JavaUuidSessionIdGenerator"/>
    
    <!--会话dao  -->
    <bean id="sessionDAO" class="org.apache.shiro.session.mgt.eis.EnterpriseCacheSessionDAO">
        <property name="activeSessionsCacheName" value="shiro-activeSessionCache"/><!--设置session缓存名  -->
        <property name="sessionIdGenerator" ref="sessionIdGenerator"/><!--会话id生成器  -->
    </bean>
    
    <!-- 会话Cookie模板 -->  
	<bean id="sessionIdCookie" class="org.apache.shiro.web.servlet.SimpleCookie">  
	    <!-- <constructor-arg value="sid"/>  --> 
	    <constructor-arg name="name" value="ycyintang.session.id"/>
	    <property name="httpOnly" value="true"/>  
	    <property name="maxAge" value="180000"/>  
	</bean> 
	
	 <!--会话管理器  -->
	 <bean id="sessionManager" class="org.apache.shiro.web.session.mgt.DefaultWebSessionManager">
        <property name="globalSessionTimeout" value="1800000"/><!-- 会话全局过期时间 -->
        <property name="deleteInvalidSessions" value="true"/><!-- 会话过期时是否删除会话，默认是true -->
        <property name="sessionValidationSchedulerEnabled" value="true"/><!-- 是否开启会话验证器，默认是开启的 -->
        <property name="sessionValidationScheduler" ref="sessionValidationScheduler"/><!--会话调度器(验证器)  -->
        <property name="sessionDAO" ref="sessionDAO"/><!--会话dao  -->
        <property name="sessionIdCookieEnabled" value="true"/><!-- 是否启用/禁用Session Id Cookie -->
        <property name="sessionIdCookie" ref="sessionIdCookie"/><!--会话cookie模板  -->
    </bean>
	 
	 <!--会话验证器  -->
	 <bean id="sessionValidationScheduler" class="org.apache.shiro.session.mgt.quartz.QuartzSessionValidationScheduler">
        <property name="sessionValidationInterval" value="1800000"/><!--  设置调度时间间隔-->
        <property name="sessionManager" ref="sessionManager"/><!--会话管理器  -->
    </bean>
	 
    <!--记住我cookie模板  -->
    <bean id="rememberMeCookie" class="org.apache.shiro.web.servlet.SimpleCookie">  
	    <constructor-arg value="rememberMe"/>  
	    <property name="httpOnly" value="true"/>  
	    <property name="maxAge" value="2592000"/><!-- 30天  --> 
	</bean>
	
	<!-- rememberMe管理器 -->  
	<bean id="rememberMeManager"   
	class="org.apache.shiro.web.mgt.CookieRememberMeManager">  
	    <!--  <property name="cipherKey" value="  
	#{T(org.apache.shiro.codec.Base64).decode('4AvVhmFLUs0KTA3Kprsdag==')}"/>   -->
	     <property name="cookie" ref="rememberMeCookie"/>  
	</bean>
    
    
    <!-- 安全管理器 -->
    <bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
    
    	<property name="authenticator" ref="authenticator"></property>
        <!-- <property name="realm" ref="userRealm" />
        <property name="realm" ref="usersRealm" /> -->
	        <!-- 注入缓存管理器 -->
	     <property name="cacheManager" ref="cacheManager"/>
	     <property name="sessionManager" ref="sessionManager"/>
         <property name="rememberMeManager" ref="rememberMeManager"/> 
          
    </bean>
    
     <!-- 配置多个Realm -->
    <bean id="authenticator" class="com.where.where_web.shiro.test.DefineModularRealmAuthenticator">
       
            <property name="defineRealms">
			<map>
				<entry key="userRealm" value-ref="userRealm" />
				<entry key="usersRealm" value-ref="usersRealm" />
				<entry key="businessRealm" value-ref="businessRealm" />
				<entry key="administratorRealm" value-ref="administratorRealm" />
			</map>
		</property>
      
    </bean>
    
     <bean class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
        <property name="staticMethod" value="org.apache.shiro.SecurityUtils.setSecurityManager"/>
        <property name="arguments" ref="securityManager"/>
    </bean>
    
    
	<!-- 自定义退出过滤器 -->
	<bean id="systemLogoutFilter" class="com.where.where_web.shiro.service.SystemLogoutFilter"></bean>
    <!-- Shiro的Web过滤器 -->
    <bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
        
        <property name="securityManager" ref="securityManager" />
        <property name="loginUrl" value="/l/login" /><!--未登录跳转页面  -->
        <property name="unauthorizedUrl" value="/" /><!--未授权跳转页面  -->
        
         <property name="filters">
            <map>
                <!--退出过滤器-->
                <entry key="logout" value-ref="systemLogoutFilter" />
            </map>
        </property>
        <property name="filterChainDefinitions">
            <value>
                /authc/admin = roles[admin]
                /logout=logout
                /authc/login = user <!--user过滤器  ，通过登录或者记住我方式 -->
               
                /** = anon
            </value>
        </property> 
    </bean>
	
    <bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor" />
</beans>